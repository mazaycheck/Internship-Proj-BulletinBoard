// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication2.Data;

namespace WebApplication2.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20200506105802_seed")]
    partial class seed
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("WebApplication2.Models.Annoucement", b =>
                {
                    b.Property<int>("AnnoucementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BrandCategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("AnnoucementId");

                    b.HasIndex("BrandCategoryId");

                    b.HasIndex("UserId");

                    b.ToTable("Annoucements");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Annoucement");
                });

            modelBuilder.Entity("WebApplication2.Models.Brand", b =>
                {
                    b.Property<int>("BrandId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("BrandId");

                    b.HasIndex("Title")
                        .IsUnique();

                    b.ToTable("Brands");

                    b.HasData(
                        new
                        {
                            BrandId = 1,
                            Title = "Other"
                        },
                        new
                        {
                            BrandId = 2,
                            Title = "None"
                        },
                        new
                        {
                            BrandId = 10,
                            Title = "Toyota"
                        },
                        new
                        {
                            BrandId = 11,
                            Title = "Volkswagen"
                        },
                        new
                        {
                            BrandId = 12,
                            Title = "Ford"
                        },
                        new
                        {
                            BrandId = 13,
                            Title = "Honda"
                        },
                        new
                        {
                            BrandId = 14,
                            Title = "Fiat"
                        },
                        new
                        {
                            BrandId = 15,
                            Title = "BMW"
                        },
                        new
                        {
                            BrandId = 16,
                            Title = "Nissan"
                        },
                        new
                        {
                            BrandId = 17,
                            Title = "Mercedez-Benz"
                        },
                        new
                        {
                            BrandId = 18,
                            Title = "Acura"
                        },
                        new
                        {
                            BrandId = 19,
                            Title = "Alfa-Romeo"
                        },
                        new
                        {
                            BrandId = 20,
                            Title = "Samsung"
                        },
                        new
                        {
                            BrandId = 21,
                            Title = "Apple"
                        },
                        new
                        {
                            BrandId = 22,
                            Title = "Huawei"
                        },
                        new
                        {
                            BrandId = 23,
                            Title = "Xiaomi"
                        },
                        new
                        {
                            BrandId = 24,
                            Title = "Motorola"
                        },
                        new
                        {
                            BrandId = 25,
                            Title = "Lenovo"
                        },
                        new
                        {
                            BrandId = 26,
                            Title = "Nokia"
                        },
                        new
                        {
                            BrandId = 27,
                            Title = "LG"
                        },
                        new
                        {
                            BrandId = 28,
                            Title = "Google Pixel"
                        },
                        new
                        {
                            BrandId = 29,
                            Title = "Asus"
                        },
                        new
                        {
                            BrandId = 30,
                            Title = "Under Armour"
                        },
                        new
                        {
                            BrandId = 31,
                            Title = "Reebok"
                        },
                        new
                        {
                            BrandId = 32,
                            Title = "Adidas"
                        },
                        new
                        {
                            BrandId = 33,
                            Title = "Nike"
                        },
                        new
                        {
                            BrandId = 34,
                            Title = "Converse"
                        },
                        new
                        {
                            BrandId = 35,
                            Title = "Puma"
                        },
                        new
                        {
                            BrandId = 36,
                            Title = "New Balance"
                        },
                        new
                        {
                            BrandId = 37,
                            Title = "Fila"
                        },
                        new
                        {
                            BrandId = 38,
                            Title = "Geox"
                        },
                        new
                        {
                            BrandId = 39,
                            Title = "Vans"
                        },
                        new
                        {
                            BrandId = 40,
                            Title = "ASOS"
                        },
                        new
                        {
                            BrandId = 41,
                            Title = "Tommy Hilfiger"
                        },
                        new
                        {
                            BrandId = 42,
                            Title = "Ralph Lauren"
                        },
                        new
                        {
                            BrandId = 43,
                            Title = "Zara"
                        },
                        new
                        {
                            BrandId = 44,
                            Title = "Levi Strauss"
                        },
                        new
                        {
                            BrandId = 45,
                            Title = "Versace"
                        },
                        new
                        {
                            BrandId = 46,
                            Title = "Hugo Boss"
                        },
                        new
                        {
                            BrandId = 47,
                            Title = "Lacoste"
                        },
                        new
                        {
                            BrandId = 48,
                            Title = "The North Face"
                        },
                        new
                        {
                            BrandId = 49,
                            Title = "Armani"
                        },
                        new
                        {
                            BrandId = 50,
                            Title = "Toshiba"
                        },
                        new
                        {
                            BrandId = 51,
                            Title = "Hewlett-Packard"
                        },
                        new
                        {
                            BrandId = 52,
                            Title = "Sony"
                        },
                        new
                        {
                            BrandId = 53,
                            Title = "Acer"
                        },
                        new
                        {
                            BrandId = 54,
                            Title = "Dell"
                        },
                        new
                        {
                            BrandId = 55,
                            Title = "Microsoft"
                        },
                        new
                        {
                            BrandId = 56,
                            Title = "Msi"
                        },
                        new
                        {
                            BrandId = 57,
                            Title = "Razer"
                        },
                        new
                        {
                            BrandId = 58,
                            Title = "Panasonic"
                        },
                        new
                        {
                            BrandId = 59,
                            Title = "Fujitsu"
                        },
                        new
                        {
                            BrandId = 60,
                            Title = "Omega"
                        },
                        new
                        {
                            BrandId = 61,
                            Title = "Seiko"
                        },
                        new
                        {
                            BrandId = 62,
                            Title = "Casio"
                        },
                        new
                        {
                            BrandId = 63,
                            Title = "Orient"
                        },
                        new
                        {
                            BrandId = 64,
                            Title = "Timex"
                        },
                        new
                        {
                            BrandId = 65,
                            Title = "Fossil"
                        },
                        new
                        {
                            BrandId = 66,
                            Title = "Swatch"
                        },
                        new
                        {
                            BrandId = 67,
                            Title = "Festina"
                        },
                        new
                        {
                            BrandId = 68,
                            Title = "Longines"
                        },
                        new
                        {
                            BrandId = 69,
                            Title = "Citizen"
                        },
                        new
                        {
                            BrandId = 70,
                            Title = "ROCA "
                        },
                        new
                        {
                            BrandId = 71,
                            Title = "Vitra"
                        },
                        new
                        {
                            BrandId = 72,
                            Title = "Ikea"
                        },
                        new
                        {
                            BrandId = 73,
                            Title = "Arper"
                        },
                        new
                        {
                            BrandId = 74,
                            Title = "Knoll"
                        },
                        new
                        {
                            BrandId = 75,
                            Title = "Hay"
                        },
                        new
                        {
                            BrandId = 76,
                            Title = "Moroso"
                        },
                        new
                        {
                            BrandId = 77,
                            Title = "Ekomia"
                        },
                        new
                        {
                            BrandId = 78,
                            Title = "B&B Italia"
                        },
                        new
                        {
                            BrandId = 79,
                            Title = "Minotti"
                        },
                        new
                        {
                            BrandId = 80,
                            Title = "Electrolux"
                        },
                        new
                        {
                            BrandId = 81,
                            Title = "Whirlpool"
                        },
                        new
                        {
                            BrandId = 82,
                            Title = "Vitek"
                        },
                        new
                        {
                            BrandId = 83,
                            Title = "Philips"
                        },
                        new
                        {
                            BrandId = 84,
                            Title = "Gorenje"
                        },
                        new
                        {
                            BrandId = 85,
                            Title = "Gefest"
                        },
                        new
                        {
                            BrandId = 86,
                            Title = "Bosch"
                        },
                        new
                        {
                            BrandId = 87,
                            Title = "Atlant"
                        },
                        new
                        {
                            BrandId = 88,
                            Title = "Rowenta"
                        },
                        new
                        {
                            BrandId = 89,
                            Title = "Kaiser"
                        },
                        new
                        {
                            BrandId = 90,
                            Title = "GoPro"
                        },
                        new
                        {
                            BrandId = 91,
                            Title = "Canon"
                        },
                        new
                        {
                            BrandId = 92,
                            Title = "Benq"
                        },
                        new
                        {
                            BrandId = 93,
                            Title = "Jbl"
                        },
                        new
                        {
                            BrandId = 94,
                            Title = "Sigma"
                        },
                        new
                        {
                            BrandId = 95,
                            Title = "Vesta"
                        },
                        new
                        {
                            BrandId = 96,
                            Title = "Epson"
                        },
                        new
                        {
                            BrandId = 97,
                            Title = "Nikon"
                        },
                        new
                        {
                            BrandId = 98,
                            Title = "Logic"
                        },
                        new
                        {
                            BrandId = 99,
                            Title = "Yamaha"
                        });
                });

            modelBuilder.Entity("WebApplication2.Models.BrandCategory", b =>
                {
                    b.Property<int>("BrandCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.HasKey("BrandCategoryId");

                    b.HasAlternateKey("BrandId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("BrandCategories");

                    b.HasData(
                        new
                        {
                            BrandCategoryId = 1,
                            BrandId = 1,
                            CategoryId = 1
                        },
                        new
                        {
                            BrandCategoryId = 2,
                            BrandId = 1,
                            CategoryId = 2
                        },
                        new
                        {
                            BrandCategoryId = 3,
                            BrandId = 1,
                            CategoryId = 3
                        },
                        new
                        {
                            BrandCategoryId = 4,
                            BrandId = 1,
                            CategoryId = 4
                        },
                        new
                        {
                            BrandCategoryId = 5,
                            BrandId = 1,
                            CategoryId = 5
                        },
                        new
                        {
                            BrandCategoryId = 6,
                            BrandId = 1,
                            CategoryId = 6
                        },
                        new
                        {
                            BrandCategoryId = 7,
                            BrandId = 1,
                            CategoryId = 7
                        },
                        new
                        {
                            BrandCategoryId = 8,
                            BrandId = 1,
                            CategoryId = 8
                        },
                        new
                        {
                            BrandCategoryId = 9,
                            BrandId = 1,
                            CategoryId = 9
                        },
                        new
                        {
                            BrandCategoryId = 10,
                            BrandId = 2,
                            CategoryId = 10
                        },
                        new
                        {
                            BrandCategoryId = 100,
                            BrandId = 10,
                            CategoryId = 1
                        },
                        new
                        {
                            BrandCategoryId = 101,
                            BrandId = 11,
                            CategoryId = 1
                        },
                        new
                        {
                            BrandCategoryId = 102,
                            BrandId = 12,
                            CategoryId = 1
                        },
                        new
                        {
                            BrandCategoryId = 103,
                            BrandId = 13,
                            CategoryId = 1
                        },
                        new
                        {
                            BrandCategoryId = 104,
                            BrandId = 14,
                            CategoryId = 1
                        },
                        new
                        {
                            BrandCategoryId = 105,
                            BrandId = 15,
                            CategoryId = 1
                        },
                        new
                        {
                            BrandCategoryId = 106,
                            BrandId = 16,
                            CategoryId = 1
                        },
                        new
                        {
                            BrandCategoryId = 107,
                            BrandId = 17,
                            CategoryId = 1
                        },
                        new
                        {
                            BrandCategoryId = 108,
                            BrandId = 18,
                            CategoryId = 1
                        },
                        new
                        {
                            BrandCategoryId = 109,
                            BrandId = 19,
                            CategoryId = 1
                        },
                        new
                        {
                            BrandCategoryId = 200,
                            BrandId = 20,
                            CategoryId = 2
                        },
                        new
                        {
                            BrandCategoryId = 201,
                            BrandId = 21,
                            CategoryId = 2
                        },
                        new
                        {
                            BrandCategoryId = 202,
                            BrandId = 22,
                            CategoryId = 2
                        },
                        new
                        {
                            BrandCategoryId = 203,
                            BrandId = 23,
                            CategoryId = 2
                        },
                        new
                        {
                            BrandCategoryId = 204,
                            BrandId = 24,
                            CategoryId = 2
                        },
                        new
                        {
                            BrandCategoryId = 205,
                            BrandId = 25,
                            CategoryId = 2
                        },
                        new
                        {
                            BrandCategoryId = 206,
                            BrandId = 26,
                            CategoryId = 2
                        },
                        new
                        {
                            BrandCategoryId = 207,
                            BrandId = 27,
                            CategoryId = 2
                        },
                        new
                        {
                            BrandCategoryId = 208,
                            BrandId = 28,
                            CategoryId = 2
                        },
                        new
                        {
                            BrandCategoryId = 209,
                            BrandId = 29,
                            CategoryId = 2
                        },
                        new
                        {
                            BrandCategoryId = 300,
                            BrandId = 30,
                            CategoryId = 3
                        },
                        new
                        {
                            BrandCategoryId = 301,
                            BrandId = 31,
                            CategoryId = 3
                        },
                        new
                        {
                            BrandCategoryId = 302,
                            BrandId = 32,
                            CategoryId = 3
                        },
                        new
                        {
                            BrandCategoryId = 303,
                            BrandId = 33,
                            CategoryId = 3
                        },
                        new
                        {
                            BrandCategoryId = 304,
                            BrandId = 34,
                            CategoryId = 3
                        },
                        new
                        {
                            BrandCategoryId = 305,
                            BrandId = 35,
                            CategoryId = 3
                        },
                        new
                        {
                            BrandCategoryId = 306,
                            BrandId = 36,
                            CategoryId = 3
                        },
                        new
                        {
                            BrandCategoryId = 307,
                            BrandId = 37,
                            CategoryId = 3
                        },
                        new
                        {
                            BrandCategoryId = 308,
                            BrandId = 38,
                            CategoryId = 3
                        },
                        new
                        {
                            BrandCategoryId = 309,
                            BrandId = 39,
                            CategoryId = 3
                        },
                        new
                        {
                            BrandCategoryId = 400,
                            BrandId = 40,
                            CategoryId = 4
                        },
                        new
                        {
                            BrandCategoryId = 401,
                            BrandId = 41,
                            CategoryId = 4
                        },
                        new
                        {
                            BrandCategoryId = 402,
                            BrandId = 42,
                            CategoryId = 4
                        },
                        new
                        {
                            BrandCategoryId = 403,
                            BrandId = 43,
                            CategoryId = 4
                        },
                        new
                        {
                            BrandCategoryId = 404,
                            BrandId = 44,
                            CategoryId = 4
                        },
                        new
                        {
                            BrandCategoryId = 405,
                            BrandId = 45,
                            CategoryId = 4
                        },
                        new
                        {
                            BrandCategoryId = 406,
                            BrandId = 46,
                            CategoryId = 4
                        },
                        new
                        {
                            BrandCategoryId = 407,
                            BrandId = 47,
                            CategoryId = 4
                        },
                        new
                        {
                            BrandCategoryId = 408,
                            BrandId = 48,
                            CategoryId = 4
                        },
                        new
                        {
                            BrandCategoryId = 409,
                            BrandId = 49,
                            CategoryId = 4
                        },
                        new
                        {
                            BrandCategoryId = 500,
                            BrandId = 50,
                            CategoryId = 5
                        },
                        new
                        {
                            BrandCategoryId = 501,
                            BrandId = 51,
                            CategoryId = 5
                        },
                        new
                        {
                            BrandCategoryId = 502,
                            BrandId = 52,
                            CategoryId = 5
                        },
                        new
                        {
                            BrandCategoryId = 503,
                            BrandId = 53,
                            CategoryId = 5
                        },
                        new
                        {
                            BrandCategoryId = 504,
                            BrandId = 54,
                            CategoryId = 5
                        },
                        new
                        {
                            BrandCategoryId = 505,
                            BrandId = 55,
                            CategoryId = 5
                        },
                        new
                        {
                            BrandCategoryId = 506,
                            BrandId = 56,
                            CategoryId = 5
                        },
                        new
                        {
                            BrandCategoryId = 507,
                            BrandId = 57,
                            CategoryId = 5
                        },
                        new
                        {
                            BrandCategoryId = 508,
                            BrandId = 58,
                            CategoryId = 5
                        },
                        new
                        {
                            BrandCategoryId = 509,
                            BrandId = 59,
                            CategoryId = 5
                        },
                        new
                        {
                            BrandCategoryId = 600,
                            BrandId = 60,
                            CategoryId = 6
                        },
                        new
                        {
                            BrandCategoryId = 601,
                            BrandId = 61,
                            CategoryId = 6
                        },
                        new
                        {
                            BrandCategoryId = 602,
                            BrandId = 62,
                            CategoryId = 6
                        },
                        new
                        {
                            BrandCategoryId = 603,
                            BrandId = 63,
                            CategoryId = 6
                        },
                        new
                        {
                            BrandCategoryId = 604,
                            BrandId = 64,
                            CategoryId = 6
                        },
                        new
                        {
                            BrandCategoryId = 605,
                            BrandId = 65,
                            CategoryId = 6
                        },
                        new
                        {
                            BrandCategoryId = 606,
                            BrandId = 66,
                            CategoryId = 6
                        },
                        new
                        {
                            BrandCategoryId = 607,
                            BrandId = 67,
                            CategoryId = 6
                        },
                        new
                        {
                            BrandCategoryId = 608,
                            BrandId = 68,
                            CategoryId = 6
                        },
                        new
                        {
                            BrandCategoryId = 609,
                            BrandId = 69,
                            CategoryId = 6
                        },
                        new
                        {
                            BrandCategoryId = 700,
                            BrandId = 70,
                            CategoryId = 7
                        },
                        new
                        {
                            BrandCategoryId = 701,
                            BrandId = 71,
                            CategoryId = 7
                        },
                        new
                        {
                            BrandCategoryId = 702,
                            BrandId = 72,
                            CategoryId = 7
                        },
                        new
                        {
                            BrandCategoryId = 703,
                            BrandId = 73,
                            CategoryId = 7
                        },
                        new
                        {
                            BrandCategoryId = 704,
                            BrandId = 74,
                            CategoryId = 7
                        },
                        new
                        {
                            BrandCategoryId = 705,
                            BrandId = 75,
                            CategoryId = 7
                        },
                        new
                        {
                            BrandCategoryId = 706,
                            BrandId = 76,
                            CategoryId = 7
                        },
                        new
                        {
                            BrandCategoryId = 707,
                            BrandId = 77,
                            CategoryId = 7
                        },
                        new
                        {
                            BrandCategoryId = 708,
                            BrandId = 78,
                            CategoryId = 7
                        },
                        new
                        {
                            BrandCategoryId = 709,
                            BrandId = 79,
                            CategoryId = 7
                        },
                        new
                        {
                            BrandCategoryId = 800,
                            BrandId = 80,
                            CategoryId = 8
                        },
                        new
                        {
                            BrandCategoryId = 801,
                            BrandId = 81,
                            CategoryId = 8
                        },
                        new
                        {
                            BrandCategoryId = 802,
                            BrandId = 82,
                            CategoryId = 8
                        },
                        new
                        {
                            BrandCategoryId = 803,
                            BrandId = 83,
                            CategoryId = 8
                        },
                        new
                        {
                            BrandCategoryId = 804,
                            BrandId = 84,
                            CategoryId = 8
                        },
                        new
                        {
                            BrandCategoryId = 805,
                            BrandId = 85,
                            CategoryId = 8
                        },
                        new
                        {
                            BrandCategoryId = 806,
                            BrandId = 86,
                            CategoryId = 8
                        },
                        new
                        {
                            BrandCategoryId = 807,
                            BrandId = 87,
                            CategoryId = 8
                        },
                        new
                        {
                            BrandCategoryId = 808,
                            BrandId = 88,
                            CategoryId = 8
                        },
                        new
                        {
                            BrandCategoryId = 809,
                            BrandId = 89,
                            CategoryId = 8
                        },
                        new
                        {
                            BrandCategoryId = 900,
                            BrandId = 90,
                            CategoryId = 9
                        },
                        new
                        {
                            BrandCategoryId = 901,
                            BrandId = 91,
                            CategoryId = 9
                        },
                        new
                        {
                            BrandCategoryId = 902,
                            BrandId = 92,
                            CategoryId = 9
                        },
                        new
                        {
                            BrandCategoryId = 903,
                            BrandId = 93,
                            CategoryId = 9
                        },
                        new
                        {
                            BrandCategoryId = 904,
                            BrandId = 94,
                            CategoryId = 9
                        },
                        new
                        {
                            BrandCategoryId = 905,
                            BrandId = 95,
                            CategoryId = 9
                        },
                        new
                        {
                            BrandCategoryId = 906,
                            BrandId = 96,
                            CategoryId = 9
                        },
                        new
                        {
                            BrandCategoryId = 907,
                            BrandId = 97,
                            CategoryId = 9
                        },
                        new
                        {
                            BrandCategoryId = 908,
                            BrandId = 98,
                            CategoryId = 9
                        },
                        new
                        {
                            BrandCategoryId = 909,
                            BrandId = 99,
                            CategoryId = 9
                        });
                });

            modelBuilder.Entity("WebApplication2.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("CategoryId");

                    b.HasIndex("Title")
                        .IsUnique();

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            Title = "Vehicles"
                        },
                        new
                        {
                            CategoryId = 2,
                            Title = "Mobile Phones"
                        },
                        new
                        {
                            CategoryId = 3,
                            Title = "Shoes"
                        },
                        new
                        {
                            CategoryId = 4,
                            Title = "Clothes"
                        },
                        new
                        {
                            CategoryId = 5,
                            Title = "Computers"
                        },
                        new
                        {
                            CategoryId = 6,
                            Title = "Watches"
                        },
                        new
                        {
                            CategoryId = 7,
                            Title = "Furniture"
                        },
                        new
                        {
                            CategoryId = 8,
                            Title = "Appliances"
                        },
                        new
                        {
                            CategoryId = 9,
                            Title = "Audio/Video"
                        },
                        new
                        {
                            CategoryId = 10,
                            Title = "Services"
                        });
                });

            modelBuilder.Entity("WebApplication2.Models.Message", b =>
                {
                    b.Property<int>("MessageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DateTimeRead")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateTimeSent")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<int>("RecieverId")
                        .HasColumnType("int");

                    b.Property<int>("SenderId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MessageId");

                    b.HasIndex("RecieverId");

                    b.HasIndex("SenderId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("WebApplication2.Models.Photo", b =>
                {
                    b.Property<int>("PhotoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnnoucementId")
                        .HasColumnType("int");

                    b.Property<string>("PhotoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PhotoId");

                    b.HasIndex("AnnoucementId");

                    b.ToTable("Photos");
                });

            modelBuilder.Entity("WebApplication2.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("WebApplication2.Models.Subscription", b =>
                {
                    b.Property<int>("SubscriptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("SubscriptionId");

                    b.HasIndex("UserId");

                    b.ToTable("Subscriptions");
                });

            modelBuilder.Entity("WebApplication2.Models.Town", b =>
                {
                    b.Property<int>("TownId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CoordX")
                        .HasColumnType("int");

                    b.Property<int>("CoordY")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.HasKey("TownId");

                    b.HasIndex("Title")
                        .IsUnique();

                    b.ToTable("Towns");

                    b.HasData(
                        new
                        {
                            TownId = 1,
                            CoordX = 250,
                            CoordY = 300,
                            Title = "Balti"
                        },
                        new
                        {
                            TownId = 2,
                            CoordX = 100,
                            CoordY = 115,
                            Title = "Briceni"
                        },
                        new
                        {
                            TownId = 3,
                            CoordX = 100,
                            CoordY = 115,
                            Title = "Cahul"
                        },
                        new
                        {
                            TownId = 4,
                            CoordX = 100,
                            CoordY = 115,
                            Title = "Camenca"
                        },
                        new
                        {
                            TownId = 5,
                            CoordX = 100,
                            CoordY = 115,
                            Title = "Camtemir"
                        },
                        new
                        {
                            TownId = 6,
                            CoordX = 100,
                            CoordY = 115,
                            Title = "Calarasi"
                        },
                        new
                        {
                            TownId = 7,
                            CoordX = 100,
                            CoordY = 115,
                            Title = "Comrat"
                        },
                        new
                        {
                            TownId = 8,
                            CoordX = 100,
                            CoordY = 115,
                            Title = "Cricova"
                        },
                        new
                        {
                            TownId = 9,
                            CoordX = 199,
                            CoordY = 250,
                            Title = "Chisinau"
                        },
                        new
                        {
                            TownId = 10,
                            CoordX = 100,
                            CoordY = 115,
                            Title = "Drochia"
                        },
                        new
                        {
                            TownId = 11,
                            CoordX = 100,
                            CoordY = 115,
                            Title = "Dubasar"
                        },
                        new
                        {
                            TownId = 12,
                            CoordX = 100,
                            CoordY = 115,
                            Title = "Durlesti"
                        },
                        new
                        {
                            TownId = 13,
                            CoordX = 100,
                            CoordY = 115,
                            Title = "Edinet"
                        },
                        new
                        {
                            TownId = 14,
                            CoordX = 100,
                            CoordY = 115,
                            Title = "Falesti"
                        },
                        new
                        {
                            TownId = 15,
                            CoordX = 100,
                            CoordY = 115,
                            Title = "Glodeni"
                        },
                        new
                        {
                            TownId = 16,
                            CoordX = 100,
                            CoordY = 115,
                            Title = "Hincesti"
                        },
                        new
                        {
                            TownId = 17,
                            CoordX = 100,
                            CoordY = 115,
                            Title = "Ialoveni"
                        },
                        new
                        {
                            TownId = 18,
                            CoordX = 100,
                            CoordY = 115,
                            Title = "Leova"
                        },
                        new
                        {
                            TownId = 19,
                            CoordX = 100,
                            CoordY = 115,
                            Title = "Lipcani"
                        },
                        new
                        {
                            TownId = 20,
                            CoordX = 100,
                            CoordY = 115,
                            Title = "Nisporeni"
                        },
                        new
                        {
                            TownId = 21,
                            CoordX = 100,
                            CoordY = 115,
                            Title = "Orhei"
                        },
                        new
                        {
                            TownId = 22,
                            CoordX = 100,
                            CoordY = 115,
                            Title = "Ocnita"
                        },
                        new
                        {
                            TownId = 23,
                            CoordX = 100,
                            CoordY = 115,
                            Title = "Rezina"
                        },
                        new
                        {
                            TownId = 24,
                            CoordX = 100,
                            CoordY = 115,
                            Title = "Riscani"
                        },
                        new
                        {
                            TownId = 25,
                            CoordX = 100,
                            CoordY = 115,
                            Title = "Soroca"
                        },
                        new
                        {
                            TownId = 26,
                            CoordX = 100,
                            CoordY = 115,
                            Title = "Straseni"
                        },
                        new
                        {
                            TownId = 27,
                            CoordX = 100,
                            CoordY = 115,
                            Title = "Taraclia"
                        },
                        new
                        {
                            TownId = 28,
                            CoordX = 100,
                            CoordY = 115,
                            Title = "Tighina"
                        },
                        new
                        {
                            TownId = 29,
                            CoordX = 100,
                            CoordY = 115,
                            Title = "Tiraspol"
                        },
                        new
                        {
                            TownId = 30,
                            CoordX = 100,
                            CoordY = 115,
                            Title = "Ungheni"
                        },
                        new
                        {
                            TownId = 31,
                            CoordX = 100,
                            CoordY = 115,
                            Title = "Vatra"
                        },
                        new
                        {
                            TownId = 32,
                            CoordX = 100,
                            CoordY = 115,
                            Title = "Vulcanesti"
                        });
                });

            modelBuilder.Entity("WebApplication2.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TownId")
                        .HasColumnType("int");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("TownId");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("WebApplication2.Models.UserProfile", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("UserProfiles");
                });

            modelBuilder.Entity("WebApplication2.Models.UserRole", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("WebApplication2.Models.Annoucements.ClothesAnnoucement", b =>
                {
                    b.HasBaseType("WebApplication2.Models.Annoucement");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Sex")
                        .HasColumnType("bit");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("ClothesAnnoucement");
                });

            modelBuilder.Entity("WebApplication2.Models.Annoucements.ElectronicsAnnoucement", b =>
                {
                    b.HasBaseType("WebApplication2.Models.Annoucement");

                    b.Property<string>("Processor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Ram")
                        .HasColumnType("int");

                    b.Property<double>("ScreenSize")
                        .HasColumnType("float");

                    b.HasDiscriminator().HasValue("ElectronicsAnnoucement");
                });

            modelBuilder.Entity("WebApplication2.Models.Annoucements.VehicleAnnoucement", b =>
                {
                    b.HasBaseType("WebApplication2.Models.Annoucement");

                    b.Property<string>("Color")
                        .HasColumnName("VehicleAnnoucement_Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EngineType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Mileage")
                        .HasColumnType("int");

                    b.Property<int>("VehicleAnnoucementId")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("VehicleAnnoucement");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("WebApplication2.Models.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("WebApplication2.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("WebApplication2.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("WebApplication2.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplication2.Models.Annoucement", b =>
                {
                    b.HasOne("WebApplication2.Models.BrandCategory", "BrandCategory")
                        .WithMany()
                        .HasForeignKey("BrandCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication2.Models.User", "User")
                        .WithMany("Annoucements")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplication2.Models.BrandCategory", b =>
                {
                    b.HasOne("WebApplication2.Models.Brand", "Brand")
                        .WithMany("BrandCategories")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication2.Models.Category", "Category")
                        .WithMany("BrandCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplication2.Models.Message", b =>
                {
                    b.HasOne("WebApplication2.Models.User", "Reciever")
                        .WithMany("MessagesRecieved")
                        .HasForeignKey("RecieverId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WebApplication2.Models.User", "Sender")
                        .WithMany("MessagesSent")
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplication2.Models.Photo", b =>
                {
                    b.HasOne("WebApplication2.Models.Annoucement", "Annoucement")
                        .WithMany("Photos")
                        .HasForeignKey("AnnoucementId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApplication2.Models.Subscription", b =>
                {
                    b.HasOne("WebApplication2.Models.User", "User")
                        .WithMany("Subscriptions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplication2.Models.User", b =>
                {
                    b.HasOne("WebApplication2.Models.Town", "Town")
                        .WithMany()
                        .HasForeignKey("TownId");
                });

            modelBuilder.Entity("WebApplication2.Models.UserProfile", b =>
                {
                    b.HasOne("WebApplication2.Models.User", "User")
                        .WithOne("UserProfile")
                        .HasForeignKey("WebApplication2.Models.UserProfile", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplication2.Models.UserRole", b =>
                {
                    b.HasOne("WebApplication2.Models.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication2.Models.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
